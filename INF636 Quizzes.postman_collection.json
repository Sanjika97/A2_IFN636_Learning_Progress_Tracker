{
	"info": {
		"_postman_id": "a44687f0-5fae-41f8-8c32-2314ce031c76",
		"name": "INF636 Quizzes",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "48093386",
		"_collection_link": "https://n12192945-739176.postman.co/workspace/Sanjika-Perera's-Workspace~b16c0daf-53a9-4fad-8c9d-5674165b4145/collection/48093386-a44687f0-5fae-41f8-8c32-2314ce031c76?action=share&source=collection_link&creator=48093386"
	},
	"item": [
		{
			"name": "Get all quizzes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is acceptable\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text"
					}
				],
				"url": "{{baseURL}}/api/quizzes"
			},
			"response": []
		},
		{
			"name": "Create Quizzes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Quiz created successfully\", function () {\r",
							"    pm.expect(response.title).to.equal(\"Test Quiz\");\r",
							"    \r",
							"});\r",
							"\r",
							"// Save quiz ID for other requests\r",
							"if (response._id) {\r",
							"    pm.environment.set(\"quiz_id\", response._id);\r",
							"    console.log(\"Quiz ID saved:\", response._id);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Test Quiz1\",\r\n    \"description\": \"Test Quiz description\",\r\n    \"score\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/api/quizzes"
			},
			"response": []
		},
		{
			"name": "Update Quiz",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"pm.test(\"Quiz updated successfully\", function () {\r",
							"    pm.expect(response.score).to.equal(85);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is acceptable\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Test Quiz Changed1\",\r\n    \"score\": 85\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/api/quizzes/{{quiz_id}}"
			},
			"response": []
		},
		{
			"name": "Delete Quiz",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Quiz deleted successfully\", function () {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.message).to.equal(\"Quiz deleted successfully\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is acceptable\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text"
					}
				],
				"url": "{{baseURL}}/api/quizzes/{{quiz_id}}"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": ""
		}
	]
}